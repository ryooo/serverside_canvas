// Generated by CoffeeScript 1.3.3
(function() {
  var Canvas, WebSocketServer, socketServer;

  Canvas = require('canvas');

  WebSocketServer = require('websocket').server;

  socketServer = new WebSocketServer({
    httpServer: global.app,
    autoAcceptConnections: true,
    maxReceivedFrameSize: 0x1000000
  });

  global.blobArray = [];

  socketServer.on('connect', function(socket) {
    setInterval(function() {
      var bin, blob, buff, c, canvas, i, imagedata, len, _i, _ref;
      canvas = new Canvas(400, 400);
      c = canvas.getContext("2d");
      blob = {
        x: 200,
        y: 200,
        xSpeed: -10 + (Math.random() * 20),
        ySpeed: -15 + (Math.random() * 20),
        color: "red",
        gravity: .4,
        size: 5
      };
      global.blobArray.push(blob);
      c.clearRect(0, 0, 400, 400);
      i = 0;
      while (i < global.blobArray.length) {
        c.fillStyle = global.blobArray[i].color;
        c.fillRect(global.blobArray[i].x, global.blobArray[i].y, global.blobArray[i].size, global.blobArray[i].size);
        global.blobArray[i].x = global.blobArray[i].x + global.blobArray[i].xSpeed;
        global.blobArray[i].y = global.blobArray[i].y + global.blobArray[i].ySpeed;
        global.blobArray[i].ySpeed = global.blobArray[i].ySpeed += global.blobArray[i].gravity;
        global.blobArray[i].size = global.blobArray[i].size * .97;
        i++;
      }
      return socket.sendUTF(canvas.toDataURL());
      imagedata = c.getImageData(0, 0, 400, 400);
      bin = imagedata.data;
      len = bin.length;
      buff = new Buffer(len);
      for (i = _i = 0, _ref = len - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        buff[i] = bin[i];
      }
      console.log(buff);
      return socket.sendBytes(buff);
    }, 1000);
    socket.on('message', function(val) {
      console.log(val);
      if (val.type === 'binary') {
        return socket.sendBytes(val.binaryData);
      }
    });
    socket.on('disconnect', function(v) {
      return console.log(val);
    });
    return console.log("collected!!");
  });

}).call(this);
